// This is your updated Prisma schema for Job Interview Tracker
// Replace your existing schema.prisma with this content

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth.js required models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  hashedPassword String?
  isPremium     Boolean   @default(false)
  premiumUntil  DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  accounts        Account[]
  sessions        Session[]
  jobApplications JobApplication[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Job Interview Tracker specific models
model JobApplication {
  id          String   @id @default(cuid())
  company     String
  position    String
  jobUrl      String?
  salaryRange String?
  location    String?
  jobType     String?  // Full-time, Part-time, Contract, Remote
  
  // Application status tracking
  status      String   @default("Applied") // Applied, Phone Screen, Interview, Final Round, Offer, Rejected, Withdrawn
  appliedDate DateTime @default(now())
  
  // User notes and research
  notes            String? @db.Text
  companyNotes     String? @db.Text
  interviewNotes   String? @db.Text
  
  // AI-generated content (JSON fields)
  aiQuestions      Json? // Generated interview questions
  companyResearch  Json? // Company insights, news, interview process
  personalizedPrep Json? // Custom "tell me about yourself" and other personalized answers
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([status])
}